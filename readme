# Ejemplos con Bun 🚀

Este repositorio contiene ejemplos de algoritmos y código TypeScript utilizando **Bun** como runtime de JavaScript.

## 📋 Contenido

### Algoritmos Implementados

- **Two Pointers Algorithm** (`tsByDefault.ts`): Implementación del algoritmo de dos punteros para encontrar dos números en un array que sumen un valor objetivo.

## 🛠️ Requisitos

- [Bun](https://bun.sh/) instalado en tu sistema

## 🚀 Instalación

```bash
# Clona el repositorio
git clone <url-del-repo>
cd bun-examples

# Instala Bun si no lo tienes
curl -fsSL https://bun.sh/install | bash
```

## ▶️ Ejecución

### Ejecutar archivos TypeScript

```bash
# Ejecutar un archivo específico
bun run fileName.ts

```
## Testing 
```bash
bun test
```

### Debugging

Puedes debuggear usando Bun con el comando:

```bash
bun --debug <archivo>.ts
```

#### Debugging en VS Code

El proyecto incluye configuración de debugging para VS Code. Simplemente:

1. Abre el archivo que quieres debuggear
2. Presiona `F5` o ve a `Run and Debug`
3. Selecciona "Debug TS with Bun (current file)"

La configuración está en `.vscode/launch.json` y permite debuggear el archivo actualmente abierto.

## 🧮 Algoritmos
- Two Pointers Algorithm
- FastAndSlowPointers


## 🤝 Contribuir

1. Fork el proyecto
2. Crea tu rama de feature (`git checkout -b feature/nuevo-algoritmo`)
3. Commit tus cambios (`git commit -m 'Añadir nuevo algoritmo'`)
4. Push a la rama (`git push origin feature/nuevo-algoritmo`)
5. Abre un Pull Request

## 📝 Licencia

Este proyecto está bajo la licencia MIT.

## 🔗 Enlaces Útiles

- [Documentación de Bun](https://bun.sh/docs)
- [TypeScript Handbook](https://www.typescriptlang.org/docs/)

---

¿Tienes algún algoritmo interesante que te gustaría ver implementado? ¡Abre un issue! 🎯